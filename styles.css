/* TODO add is Read indicator class */

/* Global Resets */
*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html {
    position: relative;
    min-height: 100%;
}

/* Body and Typography */
body {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    background-color: #2e1065;
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}

@font-face {
    font-family: OdinFont;
    src: url(./assets/fonts/Norse-Bold.otf);
}

@font-face {
    font-family: MainFont;
    src: url(./assets/fonts/OpenSans-Regular.ttf);
}

p,
h1,
h2,
h3,
input,
button {
    overflow-wrap: break-word;
    font-family: MainFont;
}

/* Browser-Specific Styles */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
}

/* Firefox */
input[type="number"] {
    -moz-appearance: textfield;
    appearance: textfield;
}

/* Header */
.header {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 150px;
    background-color: #4c1d95;
    box-shadow: 0px 10px 14px 4px rgba(0, 0, 0, 0.1);
    z-index: 1;
}

.header h1 {
    align-self: center;
    font-size: 6rem;
    font-family: OdinFont;
}

/* Main Content */
.main-container {
    display: flex;
    flex-direction: column;
    padding-inline: 10%;
}

/* Add Book Button */
.new-book-btn-container {
    align-self: center;
    margin: 15px;
}


/* Library */
input {
    padding-inline: 4px;
}

.library-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 42px;
    margin-top: 20px;
    margin-bottom: 50px;
    padding: 12px;
}

/* Library Cards and Add Book Modal*/
.book-card-container {
    align-self: baseline;
    justify-self: center;
}

.book-card-container,
#addBookModal {
    min-width: 300px;
    max-width: 400px;
    --b: 4px;
    --s: .42em;
    --color: #4545ff;
    padding: calc(.25em + var(--s)) calc(.25em + var(--s));
    color: black;
    --_p: var(--s);
    background:
        conic-gradient(from 90deg at var(--b) var(--b), #0000 90deg, var(--color) 0) var(--_p) var(--_p)/calc(100% - var(--b) - 2*var(--_p)) calc(100% - var(--b) - 2*var(--_p));
}

.book-card,
.book-form {
    background-color: #4c1d95;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 5%;
}

.book-card h3,
.book-card p,
.book-form h2,
.book-form label,
.book-form input {
    font-size: 42px;
    font-family: 'odinFont';
}

.book-form h2 {
    font-size: 50px;
    align-self: center;
}

.book-form input {
    background-color: #4545ff;
    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;
    border: none;
}

.book-card .button-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 100%;
    gap: 12px;
}

#addBookModal {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 400px;
    transition: 0.3s ease-in-out;
}

dialog {
    border: none;
}

/* Footer */
.footer {
    margin-top: auto;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    width: 100%;
    padding: 12px;
    background-color: #6d28d9;
    box-shadow: 0px -10px 10px 4px rgba(0, 0, 0, 0.1);
}

a:link,
a:visited,
a:active {
    text-decoration: none;
}

a:hover {
    text-decoration: none;
    color: #c084fc;
}

/* Custom Add Book Button Styling*/
.button-89 {
    --b: 3px;
    /* border thickness */
    --s: .45em;
    /* size of the corner */
    --color: #6d28d9;

    padding: calc(.5em + var(--s)) calc(.9em + var(--s));
    color: black;
    --_p: var(--s);
    background:
        conic-gradient(from 90deg at var(--b) var(--b), #0000 90deg, var(--color) 0) var(--_p) var(--_p)/calc(100% - var(--b) - 2*var(--_p)) calc(100% - var(--b) - 2*var(--_p));
    transition: .3s linear, color 0s, background-color 0s;
    outline: var(--b) solid #0000;
    outline-offset: .6em;
    font-size: 28px;
    font-family: 'odinFont';

    border: 0;

    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
}

.button-89:hover,
.button-89:focus-visible {
    --_p: 0px;
    outline-color: var(--color);
    outline-offset: .05em;
}

.button-89:active {
    background: var(--color);
    color: #fff;
}


/* Custom checkbox */
.checkbox-wrapper-32 {
    --size: 36px;
    --border-size: 3px;
    position: relative;
}

.checkbox-wrapper-32 *,
.checkbox-wrapper-32 *::after,
.checkbox-wrapper-32 *::before {
    box-sizing: border-box;
}

.checkbox-wrapper-32 input[type="checkbox"] {
    display: inline-block;
    vertical-align: middle;
    opacity: 0;
}

.checkbox-wrapper-32 input[type="checkbox"],
.checkbox-wrapper-32 label::before {
    width: var(--size);
    height: var(--size);
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
}

.checkbox-wrapper-32 label {
    display: inline-block;
    position: relative;
    padding: 0 0 0 calc(var(--size) + 7px);
}

.checkbox-wrapper-32 label::before {
    content: '';
    border: var(--border-size) solid #6d28d9;
    opacity: 0.7;
    transition: opacity 0.3s;
}

.checkbox-wrapper-32 input[type="checkbox"]:checked+label::before {
    opacity: 1;
}

.checkbox-wrapper-32 svg {
    position: absolute;
    top: calc(50% + var(--border-size));
    left: var(--border-size);
    width: calc(var(--size) - (var(--border-size) * 2));
    height: calc(var(--size) - (var(--border-size) * 2));
    margin-top: calc(var(--size) / -2);
    pointer-events: none;
}

.checkbox-wrapper-32 svg path {
    stroke-width: 0;
    fill: none;
    transition: stroke-dashoffset 0.2s ease-in 0s;
}

.checkbox-wrapper-32 svg path+path {
    transition: stroke-dashoffset 0.2s ease-out 0.2s;
}

.checkbox-wrapper-32 input[type="checkbox"]:checked~svg path {
    stroke-dashoffset: 0;
    stroke-width: calc(var(--size) / 2);
}